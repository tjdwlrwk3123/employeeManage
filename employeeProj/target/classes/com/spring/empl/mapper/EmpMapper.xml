<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.empl.mapper.EmpMapper">
	
	<select id="getIdSequence" resultType="int">
		select idnum.nextval from dual
	</select>
	<insert id="userInsert" parameterType="hashmap">
		insert into userinfo values(#{userid},#{userpassword},0)
	</insert>
	<insert id="empInsert" parameterType="hashmap">
		insert into emplist values((select nvl(max(empnum)+1,1) from emplist),#{userid},
		#{empname},#{ppnum},#{deptnum},#{empbirth},#{sollun},#{regionnum},#{phonenum},
		#{basepay},#{bonus},#{joinday})
	</insert>
	
	<select id="getEmployee" parameterType="hashmap" resultType="Employee">
		select * from(
			select a.*,rownum rnum from
			(
				select * from emplist
				<if test="keyword!=null and keyword!=''">
					<choose>
						<when test="search='regionnum' or search='ppnum' or search='deptnum'">
							where ${search} = #{keyword}
						</when>
						<otherwise>
							where ${search} like '*'||#{keyword}||'*'
						</otherwise>
					</choose>
				</if>
			) a
		)
		<![CDATA[ where rnum>=#{startRow} and rnum<=#{endRow} ]]>
		order by empnum
	</select>
	
	<!-- 지역관리 -->
	<insert id="regionInsert" parameterType="string">
		insert into region values((select nvl(max(regionnum)+1,1) from region),#{reginame})
	</insert>
	<select id="getRegion" resultType="Region">
		select * from region
		order by regionnum
	</select>
	<select id="getRegionOne" resultType="Region" parameterType="hashmap">
		select * from region
		where regionnum=#{reginum}
	</select>
	
	<!-- 부서관리 -->
	<insert id="deptInsert" parameterType="string">
		insert into department values((select nvl(max(deptnum)+1,1) from department),#{deptname})
	</insert>
	<select id="getDepartment" resultType="Department">
		select * from department
		order by deptnum
	</select>
	<select id="getDepartmentOne" resultType="Department" parameterType="hashmap">
		select * from department
		where deptnum=#{deptnum}
	</select>
	
	<!-- 직위관리 -->
	<insert id="ppInsert" parameterType="string">
		insert into position values((select nvl(max(ppnum)+1,1) from position),#{ppname})
	</insert>
	<select id="getPosition" resultType="Position">
		select * from position
	</select>
	<select id="getPositionOne" resultType="Position" parameterType="hashmap">
		select * from position
		where ppnum=#{ppnum}
	</select>
	
	<!-- 기본급관리 -->
	<select id="getBasepay" resultType="Payfor" parameterType="hashmap">
		select * from payfor where deptNum=#{dept} and ppNum=#{posi}
	</select>
	<select id="getAllBasepay" resultType="PDPJoin">
		select p.paynum,p.deptnum,p.ppnum,p.basepay,d.deptname,t.ppname
		from payfor p join department d
		on p.deptnum=d.deptnum
		join position t
		on p.ppnum=t.ppnum
		order by p.deptnum,p.ppnum
	</select>
	<update id="mergeBasepay" parameterType="hashmap">
		merge into payfor
		using dual
		on (deptnum=#{deptNum} and ppnum=#{ppNum})
		when matched then
			update set basepay=#{basepay}
		when not matched then
			insert values((select nvl(max(paynum)+1,1) from payfor),#{deptNum},#{ppNum},#{basepay})
	</update>
	
	<!-- 페이징처리 -->
	<select id="countEmp" resultType="int">
		select count(*) from emplist
	</select>
</mapper>